{"version":3,"file":"main.js","sources":["../src/proto.ts","../src/modules/test.ts","../src/main.ts"],"sourcesContent":["/**\r\n *  Base class for all objects/controller in a room\r\n */\r\n\r\nexport abstract class Proto {\r\n    id: any;        // Object's id\r\n    freq: number;   // Frequncy of executing act() function, in terms of number of tick\r\n    mem: any;       // Memory reference\r\n    obj: any;       // Object itself\r\n\r\n    constructor(mem: any, id: any, freq: number = 1) {\r\n        this.id = id;\r\n        this.freq = freq;\r\n        this.mem = mem;\r\n        // this.obj = Game.getObjectById(id);\r\n        this.obj = null;\r\n    }\r\n\r\n    /*  Compress information to a light-weight package to store it in memory\r\n        Input: None\r\n        Return: Set of compressed data\r\n    */\r\n    zip(mem: any): any {\r\n        mem.i = this.id;\r\n        mem.f = this.freq;\r\n    };\r\n\r\n    /*  Extract information from the package in memory, then set properties with them\r\n        Input:\r\n            - mem: memory reference of packaged data\r\n        Return: None\r\n    */\r\n    unzip(mem: any): any {\r\n        this.id = mem.i;\r\n        this.freq = mem.f;\r\n        this.mem = mem;\r\n        // this.obj = Game.getObjectById(mem.i);\r\n        this.obj = null;\r\n    };\r\n\r\n    // Do something\r\n    abstract act(): any;\r\n}","import {Proto} from '../proto'\r\n\r\nexport class Test extends Proto {\r\n    task: number;\r\n\r\n    constructor(isNew: boolean, mem: any, task: number = 2, id: any = null, freq: number = 1) {\r\n        super(mem, id, freq);\r\n        if (isNew) {\r\n            this.task = task;\r\n            this.zip(mem);\r\n        } else {\r\n            this.unzip(mem);\r\n        }\r\n    }\r\n\r\n    zip(mem: any): any {\r\n        mem.t = this.task;\r\n        super.zip(mem.pre);\r\n    }\r\n\r\n    unzip(mem: any): any {\r\n        this.task = mem.t;\r\n        super.unzip(mem.pre);\r\n    }\r\n\r\n    act(): any {\r\n        console.log(this.task);\r\n    }\r\n}\r\n","import {errorMapper} from './modules/errorMapper';\r\nimport {Test} from './modules/test';\r\n\r\n// export const loop = errorMapper(() => {\r\n//     let testObj: Zoo = new Zoo(['dog', 'cat'], ['doggy', 'catty'])\r\n//     console.log(testObj);\r\n// }, true)\r\n\r\nexport const loop = function() {\r\n\r\n    if (!Memory.flage) {\r\n        Memory.flage = true;\r\n        Memory.test = {t:0, pre:{i:0, f:0}};\r\n        global.test = new Test(true, Memory.test, 0, 12345, 6);\r\n        console.log('init');\r\n    }\r\n    \r\n    // Caching\r\n    if (!global.resetFlag) {\r\n        global.resetFlag = true\r\n        console.log('[Message] Global reset');\r\n        // Rebuild cache instance\r\n        global.test = new Test(false, Memory.test);\r\n    }\r\n    \r\n    console.log('tick:', global.test.task, global.test.id, global.test.freq);\r\n    \r\n}"],"names":[],"mappings":"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"}