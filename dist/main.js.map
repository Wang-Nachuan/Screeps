{"version":3,"file":"main.js","sources":["../src/global.ts","../src/main.ts"],"sourcesContent":["/**\r\n *  Global function/constants \r\n */\r\n\r\n// \r\ndeclare function getObjectInCache(isId: boolean, ref: Id<_HasId> | MemRef): any;\r\ndeclare function derefMem(ref: MemRef): any;\r\n\r\n// Ref can be either Id<_HasId> or MemRef type\r\nglobal.getObjectInCache = function(isId: boolean, ref: any): any {\r\n    if (isId) {\r\n        let obj = global.cache.log[ref];\r\n        if (!obj) {\r\n            console.log(\"[WARNING] Function 'getObjectInCache()': object not found in cache\");\r\n            return null;\r\n        } else {\r\n            return obj;\r\n        }\r\n    } else {\r\n        let itr = global.cache;\r\n        for (let key in ref) {\r\n            itr = itr[key];\r\n        }\r\n        return itr;\r\n    }\r\n    \r\n}\r\n\r\nglobal.derefMem = function(ref: MemRef): any {\r\n    let itr: any = Memory;\r\n    for (let key in ref) {\r\n        itr = itr[key];\r\n    }\r\n    return itr;\r\n}\r\n\r\n","import {errorMapper} from './test/errorMapper';\r\nimport './global';\r\nimport {Cache} from './cache/cache';\r\n\r\n// export const loop = errorMapper(() => {\r\n//     let testObj: Zoo = new Zoo(['dog', 'cat'], ['doggy', 'catty'])\r\n//     console.log(testObj);\r\n// }, true)\r\n\r\nexport const loop = function() {\r\n\r\n    // // Initialize memory\r\n    // if (!Memory.initFlag) {\r\n    //     Memory.initFlag = true;\r\n    //     /* TODO: initialize memory */\r\n    //     console.log('[MESSAGE] Memory initialized');\r\n    // }\r\n    \r\n    // // Caching\r\n    // if (!global.cache) {\r\n    //     global.cache = new Cache();\r\n    //     console.log('[MESSAGE] Global reset');\r\n    // } \r\n\r\n    test(10, 'aaaaa');\r\n    test(20);\r\n}\r\n\r\nfunction test(a:number, b?:string) {\r\n    console.log(a);\r\n    if (b) {console.log('true!');} else {console.log('false!');}\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEG;AAMH;AACA,MAAM,CAAC,gBAAgB,GAAG,UAAS,IAAa,EAAE,GAAQ,EAAA;AACtD,IAAA,IAAI,IAAI,EAAE;QACN,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,EAAE;AACN,YAAA,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;AAClF,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;AAAM,aAAA;AACH,YAAA,OAAO,GAAG,CAAC;AACd,SAAA;AACJ,KAAA;AAAM,SAAA;AACH,QAAA,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC;AACvB,QAAA,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACjB,YAAA,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAClB,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;AACd,KAAA;AAEL,CAAC,CAAA;AAED,MAAM,CAAC,QAAQ,GAAG,UAAS,GAAW,EAAA;IAClC,IAAI,GAAG,GAAQ,MAAM,CAAC;AACtB,IAAA,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACjB,QAAA,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAClB,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;;AC9BD;AACA;AACA;AACA;AAEa,MAAA,IAAI,GAAG,YAAA;;;;;;;;;;;;AAehB,IAAA,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAClB,IAAI,CAAC,EAAE,CAAC,CAAC;AACb,EAAC;AAED,SAAS,IAAI,CAAC,CAAQ,EAAE,CAAS,EAAA;AAC7B,IAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,IAAA,IAAI,CAAC,EAAE;AAAC,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAAC,KAAA;AAAM,SAAA;AAAC,QAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAAC,KAAA;AAChE;;;;"}